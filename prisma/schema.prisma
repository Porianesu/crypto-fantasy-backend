// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                           Int                @id @default(autoincrement())
  email                        String?            @unique // 可选，唯一
  password                     String? // 可选
  avatar                       String?
  solAmount                    Float              @default(0)
  createdAt                    DateTime           @default(now())
  updatedAt                    DateTime           @updatedAt
  hasAlreadyReadGuide          Boolean            @default(false)
  faithAmount                  Float              @default(0)
  expPercent                   Float              @default(0)
  meltCurrent                  Int                @default(0)
  meltMax                      Int                @default(0)
  cardsOwned                   UserCard[]         @relation("UserCardsOwned")
  deckCards                    Json               @default("[]") // 存储 [{ cardId: Int, userCardId: Int }]，顺序即为卡组顺序
  deckPower                    Int                @default(0) // 新增字段，存储卡组总战力
  RedemptionRecord             RedemptionRecord[]
  nickname                     String             @unique // 改为必填字段，唯一
  purchases                    UserShopPurchase[] // 新增字段，用户购买记录
  newbieRewardClaimed          Boolean            @default(false) // 新增字段，标记是否已领取新手礼包
  signIns                      UserSignIn[]
  UserAchievement              UserAchievement[]
  inviteCode                   String?            @unique // 用户唯一邀请码，可选
  invitees                     Invitation[]       @relation("InvitationInvitee")
  inviter                      Invitation[]       @relation("InvitationInviter")
  address                      String?            @unique // 新增，钱包地址
  nonce                        String? // 新增，MetaMask 登录用
  drawCountSinceLastLegendary  Int                @default(0) // 橙卡保底计数
  craftCountSinceLastLegendary Int                @default(0) // 橙卡保底计数
  craftCountSinceLastEpic      Int                @default(0) // 紫卡保底计数
  craftCountSinceLastRare      Int                @default(0) // 蓝卡保底计数
}

model Card {
  id               Int        @id @default(autoincrement())
  name             String
  nickname         String
  imageUrl         String
  faction          String
  tag              String
  quote            String
  rarity           Int
  score            Int
  pnl_30           Float
  winrate_30       Float
  score_rank       Float
  average_duration Int
  backstory        String
  owners           UserCard[] @relation("UserCardsOwned")
}

model FormSubmission {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  note      String?
  createdAt DateTime @default(now())
}

model UserCard {
  id         Int      @id @default(autoincrement())
  user       User     @relation("UserCardsOwned", fields: [userId], references: [id])
  userId     Int
  card       Card     @relation("UserCardsOwned", fields: [cardId], references: [id])
  cardId     Int
  obtainedAt DateTime @default(now())
}

model RedemptionCode {
  id          Int                @id @default(autoincrement())
  code        String             @unique
  solAmount   Float              @default(0)
  faithAmount Float              @default(0)
  maxUses     Int                @default(1)
  createdAt   DateTime           @default(now())
  expiredAt   DateTime?
  records     RedemptionRecord[]
}

model RedemptionRecord {
  id         Int            @id @default(autoincrement())
  user       User           @relation(fields: [userId], references: [id])
  userId     Int
  code       RedemptionCode @relation(fields: [codeId], references: [id])
  codeId     Int
  redeemedAt DateTime       @default(now())
}

model ShopItem {
  id              Int                @id @default(autoincrement())
  key             String             @unique // 商品标识，如 "melt_times"、"daily_bonus"
  name            String
  price           Float // 消耗的 solAmount
  rewardSol       Float              @default(0)
  rewardFaith     Float              @default(0)
  rewardMeltTimes Int                @default(0)
  dailyLimit      Int                @default(-1) // -1/0 表示不限购，>=1 表示每日限购次数
  image           String // 商品图片URL
  purchases       UserShopPurchase[]
}

model UserShopPurchase {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  shopItem    ShopItem @relation(fields: [shopItemId], references: [id])
  shopItemId  Int
  purchasedAt DateTime @default(now())
}

model UserSignIn {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  signInDate DateTime // 签到日期（UTC，精确到天即可）
  createdAt  DateTime @default(now())
}

model Achievement {
  id                Int               @id @default(autoincrement())
  type              String // 成就类型，如 collect_card, deck_score, fusion, resource
  subType           String? // 子类型，如 rarity, count, recharge, spend, gain, consume
  target            Int // 阶梯目标值
  description       String
  rewardSolAmount   Int // S代币奖励
  rewardFaithAmount Int // F代币奖励
  isActive          Boolean           @default(true)
  createdAt         DateTime          @default(now())
  userAchievements  UserAchievement[]
}

model UserAchievement {
  id            Int         @id @default(autoincrement())
  user          User        @relation(fields: [userId], references: [id])
  userId        Int
  achievement   Achievement @relation(fields: [achievementId], references: [id])
  achievementId Int
  status        Int // 0:未完成 1:已完成未领取 2:已领取
  progress      Int // 当前进度
  completedAt   DateTime?
  claimedAt     DateTime?
  createdAt     DateTime    @default(now())
}

model Invitation {
  id            Int      @id @default(autoincrement())
  inviteeUserId Int      @unique // 被邀请者ID
  inviterUserId Int // 邀请者ID
  claimed       Boolean  @default(false) // 是否已领取
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  invitee       User     @relation("InvitationInvitee", fields: [inviteeUserId], references: [id])
  inviter       User     @relation("InvitationInviter", fields: [inviterUserId], references: [id])
}

model EmailVerificationCode {
  id        Int      @id @default(autoincrement())
  email     String
  code      String
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
}
